# RESIDENTS PACKAGE
# Notifies and performs automations when key residents arrive
#----------------------------------------------------------------
homeassistant:
  customize:
  #----------------------------------------------------------------

    sensor.tracker_william:
      icon: mdi:cellphone-android
      entity_picture:
      friendly_name: William

    sensor.tracker_emily:
      icon: mdi:cellphone-android
      entity_picture: /local/emily.jpg
      friendly_name: Emily

group:
#----------------------------------------------------------------

  residents_all:
    name: Residents
    view: no
    icon: mdi:account-multiple
    entities:
    - device_tracker.william_phonewilliam
    - device_tracker.emily_phoneemily

sensor:
#----------------------------------------------------------------

  # Every resident is "sensed" through device tracking of their phones.
  # Here I prioritize "sensing" their device connected to my home network
  # over what iCloud indicates
  #----------------------------------------------------------------
  - platform: template
    sensors:
      tracker_william:
        friendly_name: 'William'
        value_template: >-
          {% if is_state('device_tracker.william_phonewilliam', 'home') %}
            Home
          {% else %}
            Away
          {% endif %}

  - platform: template
    sensors:
      tracker_emily:
        friendly_name: 'Emily'
        value_template: >-
          {% if is_state('device_tracker.emily_phoneemily', 'home') %}
            Home
          {% else %}
            Away
          {% endif %}

automation:
#----------------------------------------------------------------

  # NOTIFICATIONS
  #----------------------------------------------------------------

  # Send a notification when key residents arrive
  - alias: NOTIFY (Location) Resident
    initial_state: True # start disabled to avoid false positives on HA restart
    hide_entity: True
    trigger:
      - platform: state
        entity_id:
          - device_tracker.william_phonewilliam
          - device_tracker.emily_phoneemily
    condition:
      - condition: state
        entity_id: input_boolean.options_notifications_push
        state: 'on'
      - condition: template
        value_template: "{{ trigger.from_state.state != trigger.to_state.state  }}"
    action:
      - service: notify.html5
        data_template:
          message: "{{ trigger.from_state.attributes.friendly_name }} is {% if trigger.to_state.state == 'home' %}at home{% elif trigger.to_state.state == 'not_home' %}away{% else %}at {{ trigger.to_state.state }}{% endif %}."
          data:
            actions:
              - action: "notify_button1"
                title: "Lights ON"
              - action: "notify_button2"
                title: "Lights OFF"
          title: ""
          target: 'William'

  - alias: HTML5 push notification action button1 clicked
    initial_state: True
    hide_entity: True
    trigger:
      platform: event
      event_type: html5_notification.clicked
      event_data:
        action: notify_button1
    condition:
      - condition: state
        entity_id: input_boolean.options_notifications_push
        state: 'on'
    action:
      - service: light.turn_on
        entity_id: group.all_lights
        
  - alias: HTML5 push notification action button2 clicked
    initial_state: True
    hide_entity: True
    trigger:
      platform: event
      event_type: html5_notification.clicked
      event_data:
        action: notify_button2
    condition:
      - condition: state
        entity_id: input_boolean.options_notifications_push
        state: 'on'
    action:
      - service: light.turn_off
        entity_id: group.all_lights
        
script:
  refresh_devices:
    sequence:
      - service: mqtt.publish
        data:
          topic: "owntracks/william/phonewilliam"
          payload_template: '{"_type":"cmd","action":"reportLocation"}'
      - service: mqtt.publish
        data:
          topic: "owntracks/emily/phoneemily"
          payload_template: '{"_type":"cmd","action":"reportLocation"}'
